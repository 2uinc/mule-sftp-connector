<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
      xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:sftp="http://www.mulesoft.org/schema/mule/sftp"
      xmlns:java="http://www.mulesoft.org/schema/mule/java"
      xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
        http://www.mulesoft.org/schema/mule/sftp http://www.mulesoft.org/schema/mule/sftp/current/mule-sftp.xsd
        http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd">

    <munit:config name="sftp-read-test-case.xml"/>

    <munit:dynamic-port propertyName="sftp.server.port"/>

    <sftp:config name="config-with-limited-pool">
        <sftp:connection username="muletest1" password="muletest1" host="localhost" port="${sftp.server.port}"
                         workingDir="/" prngAlgorithm="SHA1PRNG">
            <pooling-profile exhaustedAction="WHEN_EXHAUSTED_WAIT" maxActive="7" maxIdle="3" maxWait="5000"/>
        </sftp:connection>
    </sftp:config>


    <munit:before-suite name="startSftpTestServer">
        <java:invoke-static class="org.mule.extension.sftp.internal.lifecycle.SftpServerLifecycleManager"
                            method="startSftpServer(String)">
            <java:args>
                #[{
                arg0: ${sftp.server.port},
                }]
            </java:args>
        </java:invoke-static>
    </munit:before-suite>

    <munit:after-suite name="clearSftpTestServer">
        <java:invoke-static class="org.mule.extension.sftp.internal.lifecycle.SftpServerLifecycleManager"
                            method="stopSftpServer()">
            <java:args>
                #[{}]
            </java:args>
        </java:invoke-static>
    </munit:after-suite>

    <munit:test name="sftp-read-multiple-files">
        <munit:behavior>
            <set-variable variableName="filesToCreate" value="#[20]"/>
            <set-variable variableName="fileContent" value="I just want to impress Mr. Stark"/>
            <flow-ref name="writeFiles"/>
        </munit:behavior>
        <munit:execution>
            <sftp:list config-ref="config-with-limited-pool" directoryPath="."/>
            <foreach>
                <sftp:read config-ref="config-with-limited-pool" path='#[attributes.path]'/>
                <logger level="ERROR" message="#[payload]"/>
            </foreach>
            <set-payload value="OK"/>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert>
                <munit-tools:that><![CDATA[#[import * from dw::test::Asserts
                                     ---
                                    payload must equalTo("OK")
                                    ]]]>
                </munit-tools:that>
            </munit-tools:assert>
        </munit:validation>
    </munit:test>

    <flow name="writeFiles">
        <foreach collection="#[1 to vars.filesToCreate]">
            <sftp:write config-ref="config-with-limited-pool" path="#[payload ++ '.txt']">
                <sftp:content>#[vars.fileContent]</sftp:content>
            </sftp:write>
        </foreach>
    </flow>

</mule>