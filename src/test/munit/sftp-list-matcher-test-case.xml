<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
      xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:sftp="http://www.mulesoft.org/schema/mule/sftp"
      xmlns:java="http://www.mulesoft.org/schema/mule/java"
      xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
        http://www.mulesoft.org/schema/mule/sftp http://www.mulesoft.org/schema/mule/sftp/current/mule-sftp.xsd
        http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd">

    <munit:config name="sftp-listen-matcher-test-case.xml">
    </munit:config>

    <munit:dynamic-port propertyName="sftp.server.port"/>

    <munit:before-suite name="startListenMatcherTestServer">
        <java:invoke-static class="org.mule.extension.sftp.internal.lifecycle.SftpServerLifecycleManager"
                            method="startSftpServer(String)">
            <java:args>
                #[{
                arg0: ${sftp.server.port},
                }]
            </java:args>
        </java:invoke-static>
    </munit:before-suite>

    <munit:after-suite name="clearListenMatcherTestServer">
        <java:invoke-static class="org.mule.extension.sftp.internal.lifecycle.SftpServerLifecycleManager"
                            method="stopSftpServer()">
            <java:args>
                #[{}]
            </java:args>
        </java:invoke-static>
    </munit:after-suite>

    <munit:before-test name="create-file-for-list">
        <flow-ref name="write-file"/>
    </munit:before-test>

    <munit:test name="sftp-read-file">
        <munit:execution>
            <set-variable variableName="fileContent" value="I just want to impress Mr. Stark"/>
            <set-payload value="#[vars.fileContent]"/>
        </munit:execution>
<!--        <munit:validation>
            <munit-tools:assert>
                <munit-tools:that><![CDATA[#[import * from dw::test::Asserts
                                     -&#45;&#45;
                                    payload must equalTo(vars.fileContent)
                                    ]]]>
                </munit-tools:that>
            </munit-tools:assert>
        </munit:validation>-->
    </munit:test>
    
</mule>